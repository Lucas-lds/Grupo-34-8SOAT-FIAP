name: Full Cloud Deploy

on:
  push:
    branches:
      - main

jobs:
  # 1. Build e validação da aplicação
  build-application:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build application
        run: |
          chmod +x mvnw # Concede permissão de execução ao Maven Wrapper
          ./mvnw clean package -DskipTests=true

      - name: Upload application artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

  # 2. Deploy da aplicação no Kubernetes via Terraform
  deploy-kubernetes:
    runs-on: ubuntu-latest
    needs: build-application
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download application artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  # 3. Deploy da função Lambda
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Lambda
        run: |
          zip function.zip lambda/lambda_function.py
          aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_NAME }} --zip-file fileb://function.zip

  # 4. Configuração de Infraestrutura Geral (Terraform)
  apply-infrastructure:
    runs-on: ubuntu-latest
    needs: deploy-kubernetes
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform/

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
